esphome:
  name: $device_name
  platform: ESP8266
  board: esp_wroom_02
  esphome_core_version:
    repository: https://github.com/Samuel-0-0/esphome-core.git
    branch: dc1
  build_path: build\$device_name
  esp8266_restore_from_flash: yes

substitutions:
  #设备名称
  device_name: phicomm_dc1
  #WiFi_SSID名称
  wifi_ssid: 'SSID'
  #WiFi密码
  wifi_password: '12345678'
  #OTA密码
  ota_password: '123456'

wifi:
  ssid: $wifi_ssid
  password: $wifi_password
#需要设置静态地址的改下面的配置
#  manual_ip:
#    static_ip: 192.168.178.230
#    gateway: 192.168.178.1
#    subnet: 255.255.255.0
#    dns1: 1.1.1.1
#    dns2: 1.2.2.1
  domain: .local
  reboot_timeout: 300s
  power_save_mode: none

api:

ota:
  safe_mode: True
  password: $ota_password
#  port: 3286

web_server:
  port: 80
  css_url: https://esphome.io/_static/webserver-v1.min.css
  js_url: https://esphome.io/_static/webserver-v1.min.js

#deep_sleep:
#  run_duration: 20s
#  sleep_duration: 50s

i2c:
  sda: GPIO3
  scl: GPIO12
#  scan: True
  frequency: 20kHz

uart:
  rx_pin: GPIO13
  baud_rate: 4800

cat9554:
  - id: cat9554_hub
    address: 0x20
    irq: GPIO4

debug:

logger:
  hardware_uart: UART1
  level: DEBUG
#  level: info

sensor:
  - platform: cse7766
    voltage:
      name: "${device_name} voltage"
#    current:
#      name: "${device_name} current"
    power:
      name: "${device_name} power"
    update_interval: 30s
  - platform: uptime
    name: "${device_name} uptime"
  - platform: wifi_signal
    name: "${device_name} wifi_signal"

binary_sensor:
  - platform: status
    #设备状态
    name: "${device_name} status"
    #是否对外隐藏（true/false）
    internal: false
  - platform: gpio
    #第一个按钮(内部引用，对外隐藏)
    name: "${device_name} key1"
    #是否对外隐藏（true/false）
    internal: true
    pin:
      cat9554: cat9554_hub
      # Use pin number 0
      number: 0
      mode: INPUT
    on_release:
      then:
        - switch.toggle: switch1
  - platform: gpio
    #第二个按钮(内部引用，对外隐藏)
    name: "${device_name} key2"
    #是否对外隐藏（true/false）
    internal: true
    pin:
      cat9554: cat9554_hub
      # Use pin number 1
      number: 1
      mode: INPUT
    on_release:
      then:
        - switch.toggle: switch2
  - platform: gpio
    #第三个按钮(内部引用，对外隐藏)
    name: "${device_name} key3"
    #是否对外隐藏（true/false）
    internal: true
    pin:
      cat9554: cat9554_hub
      # Use pin number 2
      number: 2
      mode: INPUT
    on_release:
      then:
        - switch.toggle: switch3
  - platform: gpio
    #总开关(内部引用，对外隐藏)
    name: "${device_name} key0"
    #是否对外隐藏（true/false）
    id: key0
    internal: true
    pin:
      number: GPIO16
      mode: INPUT_PULLDOWN_16
    on_release:
      then:
        - switch.toggle: switch0

status_led:
  pin: GPIO0

text_sensor:
  - platform: version
    #固件版本
    name: "${device_name} esphome_version"
    icon: mdi:information-outline
  - platform: wifi_info
    ip_address:
      name: "${device_name} IP Address"
    ssid:
      name: "${device_name} Connected SSID"
#    bssid:
#      name: "${device_name} Connected BSSID"

#script:
#  - id: my_script
#    then:
#      - lambda: 'ESP_LOGD("main", "Hello World!");'

#interval:
#  interval: 5s
#  then:
#    - logger.log: "Interval Run"

switch:
  - platform: gpio
    #继电器3(内部引用，对外隐藏)
    name: "${device_name} realy3"
    id: realy3
    internal: true
    pin:
      cat9554: cat9554_hub
      # Use pin number 4
      number: 4
      mode: OUTPUT
      inverted: false
  - platform: gpio
    #继电器2(内部引用，对外隐藏)
    name: "${device_name} realy2"
    id: realy2
    internal: true
    pin:
      cat9554: cat9554_hub
      # Use pin number 5
      number: 5
      mode: OUTPUT
      inverted: false
  - platform: gpio
    #继电器1(内部引用，对外隐藏)
    name: "${device_name} realy1"
    id: realy1
    internal: true
    pin:
      cat9554: cat9554_hub
      # Use pin number 6
      number: 6
      mode: OUTPUT
      inverted: false
  - platform: gpio
    #总继电器(内部引用，对外隐藏)
    name: "${device_name} realy0"
    id: realy0
    internal: true
    pin:
      cat9554: cat9554_hub
      # Use pin number 7
      number: 7
      mode: OUTPUT
      inverted: false
  - platform: template
    #虚拟总开关(显示为一个开关)
    name: "${device_name} switch0"
    id: switch0
    lambda: return id(realy0).state;
    turn_on_action:
      - switch.turn_on: realy0
      - switch.turn_on: LOGO_light
    turn_off_action:
      - switch.turn_off: realy0
      - switch.turn_off: LOGO_light
      - lambda: |-
          if (id(realy1).state) {
            id(switch1).turn_off();
          }
          if (id(realy2).state) {
            id(switch2).turn_off();
          }
          if (id(realy3).state) {
            id(switch3).turn_off();
          }
  - platform: template
    #虚拟开关1(显示为一个开关)
    name: "${device_name} switch1"
    id: switch1
    lambda: return id(realy1).state;
    turn_on_action:
      - switch.turn_on: realy1
      - lambda: |-
          if (!id(realy0).state) {
            id(switch0).turn_on();
          }
    turn_off_action:
      - switch.turn_off: realy1
  - platform: template
    #虚拟开关2(显示为一个开关)
    name: "${device_name} switch2"
    id: switch2
    lambda: return id(realy2).state;
    turn_on_action:
      - switch.turn_on: realy2
      - lambda: |-
          if (!id(realy0).state) {
            id(switch0).turn_on();
          }
    turn_off_action:
      - switch.turn_off: realy2
  - platform: template
    #虚拟开关3(显示为一个开关)
    name: "${device_name} switch3"
    id: switch3
    lambda: return id(realy3).state;
    turn_on_action:
      - switch.turn_on: realy3
      - lambda: |-
          if (!id(realy0).state) {
            id(switch0).turn_on();
          }
    turn_off_action:
      - switch.turn_off: realy3
  - platform: gpio
    pin: GPIO14
    #LOGO灯
    name: "${device_name} LOGO_light"
    id: LOGO_light
    internal: false
    inverted: true
#    restore_mode: ALWAYS_ON
  - platform: restart
    name: "${device_name} restart"
    id: device_restart


